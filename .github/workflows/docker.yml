name: Build and Publish Docker Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-workflow-checks:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.set_outputs.outputs.should-run }}
    steps:
      - name: Set outputs
        id: set_outputs
        uses: actions/github-script@v7
        with:
          script: |
            let shouldRun = 'false';
            if (context.eventName === "push") {
              shouldRun = 'true';
            } else if (context.eventName === "pull_request") {
              const commitMsg = await github.rest.repos.getCommit({
                repo: context.repo.repo,
                owner: context.repo.owner,
                ref: context.payload.pull_request.head.sha
              }).then(commit => commit.data.commit.message);
              if (commitMsg.includes("Run CI")) {
                shouldRun = 'true';
              }
            }
            core.setOutput('should-run', shouldRun);

  build-and-push:
    needs: pre-workflow-checks
    if: needs.pre-workflow-checks.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=pr,enable=${{ contains(github.event.head_commit.message, 'Run CI') }}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
