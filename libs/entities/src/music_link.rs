//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "music_link")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub all_links: Vec<String>,
    pub created_at: DateTimeUtc,
    pub spotify_link: Option<String>,
    pub equivalent_links: Vec<String>,
    pub apple_music_link: Option<String>,
    pub youtube_music_link: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::telegram_bot_music_share::Entity")]
    TelegramBotMusicShare,
}

impl Related<super::telegram_bot_music_share::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TelegramBotMusicShare.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
